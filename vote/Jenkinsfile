pipeline {
    
    agent none

    stages{
        stage('build'){
            agent{
                docker{
                    image 'python:3.6-alpine3.13'
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Compiling vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('test'){
            agent{
                docker{
                    image 'python:3.6-alpine3.13'
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Running tests on vote app'
                dir('vote'){
                    sh 'nosetests -v'
                }
            }
        }
        stage('docker-package'){
            agent any
            when{
                branch 'master'
                changeset '**/vote/**'
            }
            steps{
                echo 'Package vote app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                        def workerImage = docker.build("zinebh/vote:v${env.BUILD_ID}", "./vote"
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    
    post{
        always{
            echo 'Pipeline for vote is completed'
        }
        failure{
            slackSend (channel: "instavote-ci", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "instavote-ci", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
    
}